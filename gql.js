#!/usr/bin/env node

const videoThumbnails = [
  {
    quality: String,
    url: String,
    width: Number,
    height: Number
  }
]

const authorThumbnails = [
  {
    url: String,
    width: Number,
    height: Number
  }
]

const author = {
  author: String,
  authorId: String,
  authorUrl: String
}

const video = {
  ...author,
  title: String,
  videoId: String,
  videoThumbnails,
  description: String,
  descriptionHtml: String,
  viewCount: Number,
  published: Number,
  publishedText: String,
  lengthSeconds: Number,
  paid: Boolean,
  premium: Boolean
}

export const schema = {
  channels: {
    // GET /api/v1/channels/:ucid

    // Parameters
    // | field   | value                                           |
    // |---------|-------------------------------------------------|
    // | sort_by | "newest", "oldest", "popular" (default: newest) |

    // Note that a channel's username (if it doesn't include spaces) is also valid in
    // place of ucid, e.g. /api/v1/channels/BlenderFoundation.

    ucid: {
      ...author,
      authorThumbnails,
      authorBanners: [
        {
          url: String,
          width: Number,
          height: Number
        }
      ],
      subCount: Number,
      totalViews: Number,
      joined: Number,
      paid: Boolean,
      autoGenerated: Boolean,
      isFamilyFriendly: Boolean,
      description: String,
      descriptionHtml: String,
      allowedRegions: Array(String),
      latestVideos: [
        { ...video }
      ],
      relatedChannels: [
        {
          ...author,
          authorThumbnails
        }
      ]
    },
    videos: [
      // GET /api/v1/channels/:ucid/videos
      // GET /api/v1/channels/videos/:ucid

      // Parameters
      // | field   | value                                           |
      // |---------|-------------------------------------------------|
      // | page    | Number                                          |
      // | sort_by | "newest", "oldest", "popular" (default: newest) |

      { ...video }
    ]
  },
  search: [
    // GET /api/v1/search

    // Parameters
    // | field    | value                                                    |
    // |----------|----------------------------------------------------------|
    // | q        | String                                                   |
    // | page     | Number                                                   |
    // | sort_by  | "relevance", "rating", "upload_date", "view_count"       |
    // | date     | "hour", "today", "week", "month", "year"                 |
    // | duration | "short", "long"                                          |
    // | type     | "video", "playlist", "channel", "all", (default: video)  |
    // | features | "hd", "subtitles", "creative_commons", "3d", "live",     |
    // |          | "purchased", "4k", "360", "location", "hdr"              |
    // |          | (comma separated: e.g. "&features=hd,subtitles,3d,live") |
    // | region   | ISO 3166 country code (default: "US")                    |

    {
      // Case 1

      type: 'video',
      liveNow: Boolean,
      ...video
    },
    {
      // Case 2

      type: 'playlist',
      ...author,
      title: String,
      playlistId: String,
      videoCount: Number,
      videos: [
        {
          title: String,
          videoId: String,
          lengthSeconds: Number,
          videoThumbnails
        }
      ]
    },
    {
      // Case 3

      type: 'channel',
      ...author,
      authorThumbnails,
      subCount: Number,
      videoCount: Number,
      description: String,
      descriptionHtml: String
    }
  ]
}
